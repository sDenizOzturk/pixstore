"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[438],{3141:(e,n,t)=>{t.d(n,{A:()=>o});t(6540);var r=t(4848);const i=t(8330).WD||" ",o=()=>(0,r.jsxs)("div",{style:{backgroundColor:"#fff4e5",padding:"1em",borderLeft:"4px solid #f5a623",marginBottom:"1em",borderRadius:"4px",fontSize:"0.8em",lineHeight:"1.4",color:"#333"},children:[(0,r.jsx)("strong",{children:"\u26a0\ufe0f This section shows internal implementation details."}),(0,r.jsx)("br",{}),"It is intended for contributors or users who want to understand the inner workings of Pixstore. Typical users do not need to modify or interact with this code directly.",(0,r.jsx)("br",{}),(0,r.jsxs)("em",{children:["Also, this code was last verified with",(0,r.jsxs)("b",{children:[" Pixstore v",i]})," and may change in future versions. For the latest implementation, always check the official repository at"," ",(0,r.jsx)("a",{href:"https://github.com/sDenizOzturk/pixstore",target:"_blank",rel:"noopener noreferrer",children:"github.com/sDenizOzturk/pixstore"}),"."]})]})},7921:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"api-reference/frontend/initialization","title":"Initialization","description":"The function on this page is exported from the pixstore/frontend entrypoint:","source":"@site/docs/api-reference/frontend/init.md","sourceDirName":"api-reference/frontend","slug":"/api-reference/frontend/initialization","permalink":"/pixstore/docs/api-reference/frontend/initialization","draft":false,"unlisted":false,"editUrl":"https://github.com/sDenizOzturk/pixstore/tree/main/docusaurus/docs/api-reference/frontend/init.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"initialization","title":"Initialization","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Frontend Module","permalink":"/pixstore/docs/category/frontend-module"},"next":{"title":"Image Service","permalink":"/pixstore/docs/api-reference/frontend/image-service"}}');var i=t(4848),o=t(8453),s=t(3141);const a={id:"initialization",title:"Initialization",sidebar_position:1},c=void 0,d={},l=[{value:"<code>initPixstoreFrontend</code>",id:"initpixstorefrontend",level:2},{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Example",id:"example",level:3},{value:"How it works?",id:"how-it-works",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["The function on this page is exported from the ",(0,i.jsx)(n.code,{children:"pixstore/frontend"})," entrypoint:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import { initPixstoreFrontend } from 'pixstore/frontend'\n"})}),"\n",(0,i.jsx)(n.h2,{id:"initpixstorefrontend",children:(0,i.jsx)(n.code,{children:"initPixstoreFrontend"})}),"\n",(0,i.jsx)(n.p,{children:"Initializes the Pixstore frontend module with optional configuration and an optional custom image fetcher."}),"\n",(0,i.jsx)(n.p,{children:"This is the main entry point to configure the frontend image cache, database name/version, and network behavior."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"description",children:"Description"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"export const initPixstoreFrontend = (\n  config?: Partial<PixstoreFrontendConfig>,\n  customImageFetcher?: ImageFetcher\n): void\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Name"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"config"})}),(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.code,{children:"Partial<"}),(0,i.jsx)(n.a,{href:"/docs/api-reference/types#pixstorefrontendconfig",children:(0,i.jsx)(n.code,{children:"PixstoreFrontendConfig"})}),(0,i.jsx)(n.code,{children:">"})]}),(0,i.jsx)(n.td,{children:"Optional overrides for internal frontend configuration."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"customImageFetcher"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/docs/api-reference/types#imagefetcher",children:(0,i.jsx)(n.code,{children:"ImageFetcher"})})}),(0,i.jsx)(n.td,{children:"Optional function to override how images are fetched."})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import { initPixstoreFrontend } from 'pixstore/frontend'\nimport type { ImageFetcher } from 'pixstore/types'\n\n// Custom fetcher supports full secure protocol (token, statelessProof)\nconst customImageFetcher: ImageFetcher = async (record, context) => {\n  const { id: imageId, token: imageToken, statelessProof } = record\n  const jwt = getJwtFromYourAuthSystem()\n\n  const res = await fetch(`https://your-api.com/your-route/${imageId}`, {\n    headers: {\n      Authorization: `Bearer ${jwt}`,\n      'x-pixstore-token': String(imageToken),\n      'x-pixstore-proof': statelessProof,\n    },\n  })\n\n  if (!res.ok) throw new Error('Failed to fetch image')\n  const arrayBuffer = await res.arrayBuffer()\n  return new Uint8Array(arrayBuffer)\n}\n\n// Usage\ninitPixstoreFrontend(\n  {\n    frontendImageCacheLimit: 2000,\n    frontendCleanupBatch: 100,\n  },\n  customImageFetcher,\n)\n"})}),"\n",(0,i.jsxs)(n.admonition,{type:"caution",children:[(0,i.jsxs)(n.p,{children:["If you provide a ",(0,i.jsx)(n.code,{children:"customImageFetcher"}),", you must also implement a custom backend endpoint using ",(0,i.jsx)(n.code,{children:"customEndpointHelper"}),"."]}),(0,i.jsx)(n.p,{children:"Otherwise, the default image-fetching logic is bypassed and Pixstore cannot retrieve images through the default route, even if it is enabled."})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"how-it-works",children:"How it works?"}),"\n",(0,i.jsx)(s.A,{}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"/**\n * Initializes the Pixstore frontend module with the given configuration.\n * Optionally, a custom image fetcher function can be provided.\n */\nexport const initPixstoreFrontend = (\n  config: Partial<PixstoreFrontendConfig> = {},\n  customImageFetcher?: ImageFetcher,\n) => {\n  // Apply user config to internal state\n  initPixstore(config)\n\n  // Register optional image fetcher override\n  registerCustomImageFetcher(customImageFetcher)\n}\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udcc4 Source: ",(0,i.jsx)(n.a,{href:"https://github.com/sDenizOzturk/pixstore/blob/main/src/frontend/index.ts",children:(0,i.jsx)(n.code,{children:"src/frontend/index.ts"})})]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8330:e=>{e.exports={WD:"3.2.1"}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var r=t(6540);const i={},o=r.createContext(i);function s(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);