"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[941],{7052:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"reference/backend/initialization","title":"Initialization","description":"The function on this page is exported from the pixstore/backend entrypoint:","source":"@site/docs/reference/backend/init.md","sourceDirName":"reference/backend","slug":"/reference/backend/initialization","permalink":"/pixstore/docs/reference/backend/initialization","draft":false,"unlisted":false,"editUrl":"https://github.com/sDenizOzturk/pixstore/tree/main/docusaurus/docs/reference/backend/init.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"initialization","title":"Initialization","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Backend Module","permalink":"/pixstore/docs/category/backend-module"},"next":{"title":"Image Service","permalink":"/pixstore/docs/reference/backend/image-service"}}');var r=i(4848),s=i(8453);const d={id:"initialization",title:"Initialization",sidebar_position:1},o=void 0,c={},a=[{value:"<code>initPixstoreBackend</code>",id:"initpixstorebackend",level:2},{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"PixstoreBackendConfig",id:"pixstorebackendconfig",level:4},{value:"Example",id:"example",level:3},{value:"How it works?",id:"how-it-works",level:3}];function l(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["The function on this page is exported from the ",(0,r.jsx)(n.code,{children:"pixstore/backend"})," entrypoint:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { initPixstoreBackend } from 'pixstore/backend'\n"})}),"\n",(0,r.jsx)(n.h2,{id:"initpixstorebackend",children:(0,r.jsx)(n.code,{children:"initPixstoreBackend"})}),"\n",(0,r.jsx)(n.p,{children:"Initializes the Pixstore backend module with optional runtime configuration."}),"\n",(0,r.jsx)(n.p,{children:"This is the main entry point to set up Pixstore on the server side."}),"\n",(0,r.jsx)(n.p,{children:"It configures the internal state, prepares the metadata database, and optionally starts the default HTTP endpoint."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"description",children:"Description"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"export const initPixstoreBackend = (\n  config: Partial<PixstoreBackendConfig> = {}\n): void\n"})}),"\n",(0,r.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"config"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Partial<PixstoreBackendConfig>"})}),(0,r.jsx)(n.td,{children:"Optional runtime configuration for the backend."})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"pixstorebackendconfig",children:"PixstoreBackendConfig"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"PixstoreBackendConfig"})," object allows you to customize how Pixstore behaves in the backend environment.\nAll fields are optional; missing values are filled using the internal ",(0,r.jsx)(n.code,{children:"defaultConfig"}),"."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Property"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Default (non-test)"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"imageFormats"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"ImageFormat[]"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"['png', 'jpeg', 'webp']"})}),(0,r.jsx)(n.td,{children:"Allowed image formats"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"imageRootDir"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"'pixstore-images'"})}),(0,r.jsx)(n.td,{children:"Folder where images are saved"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"databasePath"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"'./.pixstore.sqlite'"})}),(0,r.jsx)(n.td,{children:"Path to SQLite metadata DB"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"defaultEndpointEnabled"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"boolean"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"true"})}),(0,r.jsx)(n.td,{children:"Whether to expose the default GET image endpoint"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"defaultEndpointRoute"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"'/pixstore-image'"})}),(0,r.jsx)(n.td,{children:"Route path for the default image endpoint"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"defaultEndpointListenHost"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"'0.0.0.0'"})}),(0,r.jsx)(n.td,{children:"Host/IP where the image endpoint HTTP server listens"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"defaultEndpointListenPort"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"number"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"3001"})}),(0,r.jsx)(n.td,{children:"Port where the image endpoint HTTP server listens"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"accessControlAllowOrigin"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"'*'"})}),(0,r.jsxs)(n.td,{children:["CORS ",(0,r.jsx)(n.code,{children:"Access-Control-Allow-Origin"})," header for the default route"]})]})]})]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["\u2139\ufe0f When running in test mode (",(0,r.jsx)(n.code,{children:"IS_TEST === true"}),"), values like paths and ports are automatically randomized or sandboxed."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { initPixstoreBackend } from 'pixstore/backend'\n\ninitPixstoreBackend({\n  defaultEndpointEnabled: false,\n})\n"})}),"\n",(0,r.jsx)(n.p,{children:"This will initialize the database and disable default image endpoint."}),"\n",(0,r.jsxs)(n.admonition,{type:"caution",children:[(0,r.jsxs)(n.p,{children:["If you disable the default endpoint just like this example\nyou ",(0,r.jsx)(n.strong,{children:"must"})," implement your own image-serving endpoint using ",(0,r.jsx)(n.code,{children:"customEndpointHelper"}),"."]}),(0,r.jsx)(n.p,{children:"Otherwise, the frontend mechanism of this library can not fetch images automatically"})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"how-it-works",children:"How it works?"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"/**\n * Initializes the Pixstore backend module with the given configuration.\n * Starts the default endpoint if enabled.\n */\nexport const initPixstoreBackend = (\n  config: Partial<PixstoreBackendConfig> = {},\n) => {\n  // Validates user config (e.g. cleanupBatch must be < cacheLimit)\n  // Then applies it to the internal Pixstore state\n  initPixstore(config)\n\n  // Prepares the database for storing image metadata\n  initializeDatabase()\n\n  // If enabled, starts the default image-serving HTTP endpoint\n  if (pixstoreConfig.defaultEndpointEnabled) {\n    startDefaultEndpoint()\n  }\n}\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udcc4 Source: ",(0,r.jsx)(n.a,{href:"https://github.com/sDenizOzturk/pixstore/blob/main/src/backend/index.ts",children:(0,r.jsx)(n.code,{children:"src/backend/index.ts"})})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>o});var t=i(6540);const r={},s=t.createContext(r);function d(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);