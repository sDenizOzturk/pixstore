"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[289],{1192:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"api-reference/backend/custom-endpoint","title":"Custom Endpoint Helper","description":"customEndpointHelper","source":"@site/docs/api-reference/backend/custom-endpoint.md","sourceDirName":"api-reference/backend","slug":"/api-reference/backend/custom-endpoint","permalink":"/pixstore/docs/api-reference/backend/custom-endpoint","draft":false,"unlisted":false,"editUrl":"https://github.com/sDenizOzturk/pixstore/tree/main/docusaurus/docs/api-reference/backend/custom-endpoint.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"custom-endpoint","title":"Custom Endpoint Helper","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Image Service","permalink":"/pixstore/docs/api-reference/backend/image-service"},"next":{"title":"Frontend Module","permalink":"/pixstore/docs/category/frontend-module"}}');var s=r(4848),o=r(8453),i=r(3141);const a={id:"custom-endpoint",title:"Custom Endpoint Helper",sidebar_position:3},d=void 0,c={},l=[{value:"<code>customEndpointHelper</code>",id:"customendpointhelper",level:2},{value:"Description",id:"description",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Example (Express handler)",id:"example-express-handler",level:3},{value:"How it works?",id:"how-it-works",level:3},{value:"Security &amp; Error Handling",id:"security--error-handling",level:3}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"customendpointhelper",children:(0,s.jsx)(n.code,{children:"customEndpointHelper"})}),"\n",(0,s.jsxs)(n.p,{children:["This function enables you to build a ",(0,s.jsx)(n.strong,{children:"secure custom image endpoint"})," for Pixstore.\nIt ",(0,s.jsx)(n.strong,{children:"validates access"})," (statelessProof, clientToken) and returns a binary image payload in Pixstore wire format (",(0,s.jsx)(n.code,{children:"Uint8Array"}),") for direct frontend consumption."]}),"\n",(0,s.jsxs)(n.p,{children:["If the image does not exist or access is invalid, the returned payload will have an appropriate ",(0,s.jsx)(n.code,{children:"WirePayloadState"})," (see protocol docs)."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"If the default endpoint is enabled, this function throws an error."})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"description",children:"Description"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export const customEndpointHelper = async (\n  imageId: string,\n  clientToken: number,\n  statelessProof: string,\n): Promise<Uint8Array | null>\n\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"imageId"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"The ID of the image to fetch"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"clientToken"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number | undefined"})}),(0,s.jsx)(n.td,{children:"The client's current token (from ImageRecord)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"statelessProof"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"Stateless proof string (from getCurrentStatelessProof)"})]})]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"example-express-handler",children:"Example (Express handler)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Express handler for serving Pixstore images in custom endpoint mode\napp.get('/image/:imageId', async (req, res) => {\n  // Extract imageId from the URL path\n  const imageId = req.params.imageId\n\n  // Parse clientToken (from header or query)\n  const clientToken = Number(clientTokenRaw)\n\n  // Parse statelessProof (from header or query)\n  const statelessProof = req.headers['x-pixstore-proof']\n    ? String(req.headers['x-pixstore-proof'])\n    : ''\n\n  // --- CRITICAL: Pixstore security integration ---\n  // Always use customEndpointHelper for image serving;\n  // Never serve image files or database blobs directly!\n  // This ensures protocol and security guarantees.\n\n  // Call Pixstore to generate wire-format payload\n  const payload = await customEndpointHelper(\n    imageId,\n    clientToken,\n    statelessProof,\n  )\n\n  // Always send HTTP 200; all errors/statuses are encoded in the first byte\n  res.send(payload)\n})\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note:"}),"\nNever serve raw images or DB blobs directly. Always use ",(0,s.jsx)(n.code,{children:"customEndpointHelper"})," to enforce all access rules and security checks!"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"how-it-works",children:"How it works?"}),"\n",(0,s.jsx)(i.A,{}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"/**\n * Returns a Pixstore wire format encoded image payload (Uint8Array) for the given image ID.\n * Throws if the default endpoint is running, to prevent accidental dual endpoint usage.\n * Can be used in any custom endpoint handler to build a secure response.\n *\n * All security checks (stateless proof, image tag, etc.) are enforced before generating the payload.\n */\nexport const customEndpointHelper = async (\n  imageId: string,\n  clientToken: number,\n  statelessProof: string,\n): Promise<Uint8Array | null> => {\n  return handleErrorAsync(async () => {\n    // Prevent usage if the default endpoint is active (safety guard)\n    if (isServerStarted()) {\n      throw new PixstoreError(\n        'Pixstore custom endpoint mode is not active. Please disable the default endpoint before using customEndpointHelper().',\n      )\n    }\n    // Perform all security and wire checks\n    return await endpointHelper(imageId, clientToken, statelessProof)\n  })\n}\n\n/**\n * Generates an encoded Pixstore wire payload for the requested image ID.\n *\n * - Validates the provided statelessProof and clientToken before serving any image data.\n * - On any missing or invalid input, returns a payload with the appropriate WirePayloadState.\n * - If the stateless proof is valid, calls getWirePayload to return the correct payload variant\n *   (Success, Updated, NotFound).\n * - Catches any unexpected errors and returns an InternalError state.\n *\n * Always returns an encoded Uint8Array wire payload,\n * with the state as the first byte for protocol-agnostic error handling.\n */\nexport const endpointHelper = async (\n  imageId: string | undefined,\n  clientToken: number | undefined,\n  statelessProof: string | undefined,\n): Promise<Uint8Array> => {\n  try {\n    // Validate parameters\n    if (!imageId)\n      return encodeWirePayload({ state: WirePayloadState.MissingID })\n    if (!statelessProof)\n      return encodeWirePayload({ state: WirePayloadState.MissingProof })\n\n    // Validate the stateless proof-of-access key (time-based)\n    if (!verifyStatelessProof(imageId, statelessProof)) {\n      return encodeWirePayload({ state: WirePayloadState.InvalidProof })\n    }\n\n    // Fetch the decrypted image and its metadata as a wire payload structure\n    const wirePayload = await getWirePayload(imageId, clientToken)\n\n    // Encode as Uint8Array in Pixstore wire format (consumed by the frontend)\n    return encodeWirePayload(wirePayload)\n  } catch {\n    return encodeWirePayload({ state: WirePayloadState.InternalError })\n  }\n}\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"security--error-handling",children:"Security & Error Handling"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["If ",(0,s.jsx)(n.code,{children:"statelessProof"})," or ",(0,s.jsx)(n.code,{children:"clientToken"})," are invalid, the returned payload will have the correct error ",(0,s.jsx)(n.code,{children:"WirePayloadState"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["If an unexpected error occurs, a payload with state ",(0,s.jsx)(n.code,{children:"InternalError"})," is returned."]}),"\n",(0,s.jsxs)(n.li,{children:["The function returns ",(0,s.jsx)(n.code,{children:"null"})," only if a critical error is caught by ",(0,s.jsx)(n.code,{children:"handleErrorAsync"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:["\ud83d\udcc4 Source: ",(0,s.jsx)(n.a,{href:"https://github.com/sDenizOzturk/pixstore/blob/main/src/backend/custom-endpoint.ts",children:(0,s.jsx)(n.code,{children:"src/backend/custom-endpoint.ts"})})]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},3141:(e,n,r)=>{r.d(n,{A:()=>o});r(6540);var t=r(4848);const s=r(8330).WD||" ",o=()=>(0,t.jsxs)("div",{style:{backgroundColor:"#fff4e5",padding:"1em",borderLeft:"4px solid #f5a623",marginBottom:"1em",borderRadius:"4px",fontSize:"0.8em",lineHeight:"1.4",color:"#333"},children:[(0,t.jsx)("strong",{children:"\u26a0\ufe0f This section shows internal implementation details."}),(0,t.jsx)("br",{}),"It is intended for contributors or users who want to understand the inner workings of Pixstore. Typical users do not need to modify or interact with this code directly.",(0,t.jsx)("br",{}),(0,t.jsxs)("em",{children:["Also, this code was last verified with",(0,t.jsxs)("b",{children:[" Pixstore v",s]})," and may change in future versions. For the latest implementation, always check the official repository at"," ",(0,t.jsx)("a",{href:"https://github.com/sDenizOzturk/pixstore",target:"_blank",rel:"noopener noreferrer",children:"github.com/sDenizOzturk/pixstore"}),"."]})]})},8330:e=>{e.exports={WD:"3.2.1"}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>a});var t=r(6540);const s={},o=t.createContext(s);function i(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);